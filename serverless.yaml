service: cancer-prediction-api
frameworkVersion: '>=3 <5'
configValidationMode: error

provider:
  name: aws
  runtime: python3.12
  region: ${opt:region, 'eu-west-3'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 15
  logRetentionInDays: 14
  tracing:
    lambda: true
  environment:
    STAGE: ${sls:stage}
  # REST API Gateway options
  apiGateway:
    minimumCompressionSize: 1024
  logs:
    restApi:
      accessLogging: true
      executionLogging: true
      level: INFO
      fullExecutionData: false
  deploymentBucket:
    blockPublicAccess: true
    serverSideEncryption: AES256
  tags:
    Project: mlops-breast-cancer
    Service: cancer-prediction-api
    Stage: ${sls:stage}

package:
  patterns:
    - '!node_modules/**'
    - '!venv/**'
    - '!tests/**'
    - 'handler.py'
    - 'model/**' # si tu as un dossier modèle

custom:
  # Mets ici ton domaine Amplify si tu veux éviter la valeur par défaut.
  # export AMPLIFY_URL="https://main.xxxxxx.amplifyapp.com" avant le deploy,
  # ou ajoute AMPLIFY_URL dans tes secrets/vars de CI.
  allowedOrigins:
    - https://form.mlopstheotiste.fr
    - ${env:AMPLIFY_URL, 'https://main.d1s8fkj9in84k5.amplifyapp.com'}

functions:
  predict:
    handler: handler.predict
    timeout: 20
    layers:
      # ARNs des layers (numpy + scikit-learn) – adapte si besoin
      - arn:aws:lambda:eu-west-3:571600829584:layer:numpy-layer:2
      - arn:aws:lambda:eu-west-3:571600829584:layer:sklearn-layer:11
    events:
      - http:
          path: predict
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
            allowCredentials: false
          # ✅ Validation côté API Gateway (évite le "Missing `features`")
          request:
            schemas:
              application/json:
                name: PredictRequest
                schema:
                  type: object
                  required: [features]
                  properties:
                    features:
                      type: array
                      minItems: 30
                      maxItems: 30
                      items:
                        type: number

  health:
    handler: handler.health
    timeout: 15
    layers:
      # ARNs des layers (numpy + scikit-learn) – adapte si besoin
      - arn:aws:lambda:eu-west-3:571600829584:layer:numpy-layer:2
      - arn:aws:lambda:eu-west-3:571600829584:layer:sklearn-layer:11
    events:
      - http:
          path: health
          method: get
          cors: true

resources:
  Outputs:
    ServiceEndpoint:
      Description: REST API base URL
      Value:
        Fn::Join:
          - ''
          - - 'https://'
            - Ref: ApiGatewayRestApi
            - '.execute-api.'
            - Ref: AWS::Region
            - '.amazonaws.com/'
            - ${sls:stage}
    HealthUrl:
      Description: Healthcheck URL
      Value:
        Fn::Join:
          - ''
          - - 'https://'
            - Ref: ApiGatewayRestApi
            - '.execute-api.'
            - Ref: AWS::Region
            - '.amazonaws.com/'
            - ${sls:stage}
            - '/health'
    PredictUrl:
      Description: Predict URL
      Value:
        Fn::Join:
          - ''
          - - 'https://'
            - Ref: ApiGatewayRestApi
            - '.execute-api.'
            - Ref: AWS::Region
            - '.amazonaws.com/'
            - ${sls:stage}
            - '/predict'
