service: cancer-prediction-api
frameworkVersion: "4"
configValidationMode: error

provider:
  name: aws
  runtime: python3.12
  region: ${opt:region, 'eu-west-3'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 15
  logRetentionInDays: 14
  tracing:
    lambda: true
  environment:
    STAGE: ${sls:stage}
  # ⇣ Options REST API (API Gateway v1)
  apiGateway:
    minimumCompressionSize: 1024
  logs:
    restApi:
      accessLogging: true
      executionLogging: true
      level: INFO
      fullExecutionData: false
  deploymentBucket:
    blockPublicAccess: true
    serverSideEncryption: AES256
  tags:
    Project: mlops-breast-cancer
    Service: cancer-prediction-api
    Stage: ${sls:stage}

# on exclut tout par défaut, puis on inclut par fonction
package:
  individually: true
  patterns:
    - '!**'
    - '!.git/**'
    - '!node_modules/**'
    - '!venv/**'
    - '!train-venv/**'
    - '!model-layer/**'
    - '!**/__pycache__/**'
    - '!**/*.ipynb'
    - '!**/*.csv'
    - '!**/*.parquet'
    - '!**/*.md'

custom:
  allowedOrigins:
    - https://form.mlopstheotiste.fr
    - ${env:AMPLIFY_URL, 'https://main.d1s8fkj9in84k5.amplifyapp.com'}

functions:

  # --- /health : uniquement handler.py (léger)
  health:
    handler: handler.health
    package:
      patterns:
        - handler.py
    events:
      - http:               # REST API
          path: health
          method: get
          cors: true

  # --- /predict : handler + modèle .joblib ; validation du body (REST)
  predict:
    handler: handler.predict
    package:
      patterns:
        - handler.py
        - model/*.joblib      # adapte si le nom/extension diffère
    timeout: 20
    events:
      - http:                 # REST API
          path: predict
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
            allowCredentials: false
          # ⚠️ Pour REST API la clé est 'request.schema' (au singulier)
          request:
            schema:
              application/json:
                name: PredictRequest
                schema: ${file(schemas/predict.json)}

resources:
  Outputs:
    ServiceEndpoint:
      Description: REST API base URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - ${sls:stage}
    HealthUrl:
      Description: Healthcheck URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - ${sls:stage}
            - "/health"
    PredictUrl:
      Description: Predict URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - ${sls:stage}
            - "/predict"
