name: Deploy Serverless API

on:
  push:
    branches: [ main ]
    paths:
      - "serverless.yaml"
      - "handler.py"
      - "schemas/**"
      - ".github/workflows/deploy.yml"

permissions:
  contents: read
  id-token: write   # requis si tu utilises OIDC (role-to-assume)

env:
  AWS_REGION: eu-west-3
  STAGE: dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (for Serverless)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Serverless
        run: npm i -g serverless@4

      - name: Setup Python (facultatif, pour packager des deps)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # ============= OPTION A : clés d’accès (les plus simples) =============
      - name: Configure AWS credentials (keys)
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # ============= OPTION B : OIDC + rôle IAM (recommandé) ================
      # Décommente si tu as un rôle (et commente l'étape Option A)
      # - name: Configure AWS credentials (OIDC)
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      #     aws-region:     ${{ env.AWS_REGION }}

      - name: Deploy with Serverless
        run: sls deploy --region "$AWS_REGION" --stage "$STAGE"
