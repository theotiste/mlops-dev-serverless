name: deploy-dev

on:
  push:
    branches: [ main ]
    paths:
      - "handler.py"
      - "serverless.yaml"
      - ".github/workflows/**"

env:
  AWS_REGION: eu-west-3
  STACK_NAME: cancer-prediction-api-dev   # service "cancer-prediction-api" + stage "dev"

jobs:
  deploy-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Serverless CLI
        run: npm i -g serverless@4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Show versions
        run: |
          node -v
          npm -v
          serverless -v
          python --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate Serverless config
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: serverless print --stage dev --region $AWS_REGION > /dev/null

      - name: Deploy (dev)
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: serverless deploy --stage dev --region $AWS_REGION --verbose

      - name: Fetch API base URL from CloudFormation
        id: urls
        run: |
          BASE=$(aws cloudformation describe-stacks \
            --stack-name "$STACK_NAME" \
            --region "$AWS_REGION" \
            --query "Stacks[0].Outputs[?OutputKey=='HttpApiUrl'].OutputValue" \
            --output text)
          echo "Base URL: $BASE"
          echo "base=$BASE" >> "$GITHUB_OUTPUT"
          echo "health=${BASE%/}/health" >> "$GITHUB_OUTPUT"
          echo "predict=${BASE%/}/predict" >> "$GITHUB_OUTPUT"

      - name: Smoke test /health
        run: |
          sudo apt-get update -y >/dev/null
          sudo apt-get install -y jq >/dev/null
          URL="${{ steps.urls.outputs.health }}"
          echo "Health URL: $URL"
          test -n "$URL"
          curl -sS "$URL" | jq -e '.ok == true' >/dev/null

      - name: Show endpoints (optional)
        run: |
          echo "BASE=${{ steps.urls.outputs.base }}"
          echo "HEALTH=${{ steps.urls.outputs.health }}"
          echo "PREDICT=${{ steps.urls.outputs.predict }}"


