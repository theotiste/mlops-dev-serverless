name: deploy-dev

on:
  push:
    branches: [ main ]
    paths:
      - "**/*.py"
      - "serverless.yaml"
      - ".github/workflows/deploy.yml"
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write   # prêt pour OIDC si tu passes aux rôles IAM

concurrency:
  group: deploy-dev
  cancel-in-progress: true

env:
  AWS_REGION: eu-west-3
  STAGE: dev
  STACK_NAME: cancer-prediction-api-dev

jobs:
  deploy-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Serverless CLI
        run: npm i -g serverless@4

      - name: Setup Python (tools jq/curl seront installés plus bas si besoin)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Garde l’auth AWS par clés pour l’instant (simple). OIDC en “Prochaines étapes”.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate Serverless config
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: serverless print --stage $STAGE --region $AWS_REGION > /dev/null

      - name: Deploy (dev)
        env:
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: serverless deploy --stage $STAGE --region $AWS_REGION --conceal

      - name: Fetch API base URL from CloudFormation
        id: api
        run: |
          URL=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" \
            --query "Stacks[0].Outputs[?OutputKey=='HttpApiUrl'].OutputValue" \
            --output text)
          # sécurité : on enlève un éventuel trailing slash
          URL=${URL%/}
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Smoke test /health
        run: |
          sudo apt-get update -y >/dev/null
          sudo apt-get install -y jq >/dev/null
          URL="${{ steps.api.outputs.url }}/health"
          echo "Health URL: $URL"
          test -n "$URL"
          curl -fsS "$URL" | jq -e '.ok == true' > /dev/null

      - name: Show endpoints (optional) and save
        run: serverless info --verbose --stage $STAGE --region $AWS_REGION | tee sls-info.txt

      - name: Upload sls info
        uses: actions/upload-artifact@v4
        with:
          name: sls-info
          path: sls-info.txt
