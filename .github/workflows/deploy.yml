service: cancer-prediction-api
frameworkVersion: ">=3 <5"
configValidationMode: error

provider:
  name: aws
  runtime: python3.12
  region: ${opt:region, 'eu-west-3'}
  stage: ${opt:stage, 'dev'}

  # Ressources Lambda
  memorySize: 512
  timeout: 15
  logRetentionInDays: 14
  tracing:
    lambda: true

  # Variables d'env dispo dans la Lambda
  environment:
    STAGE: ${sls:stage}

  # API Gateway (REST)
  apiGateway:
    minimumCompressionSize: 1024
  logs:
    restApi:
      accessLogging: true
      executionLogging: true
      level: INFO
      fullExecutionData: false

  # Bucket de déploiement Serverless
  deploymentBucket:
    blockPublicAccess: true
    serverSideEncryption: AES256

  # Tags utiles
  tags:
    Project: mlops-breast-cancer
    Service: cancer-prediction-api
    Stage: ${sls:stage}

# Packaging: uniquement ce qui est nécessaire
package:
  patterns:
    - "!node_modules/**"
    - "!venv/**"
    - "!tests/**"
    - "handler.py"
    - "model/**"

# CORS autorisés (ajoutez votre URL Amplify via la var d'env AMPLIFY_URL si besoin)
custom:
  allowedOrigins:
    - https://form.mlopstheotiste.fr
    - ${env:AMPLIFY_URL, 'https://main.d1s8fkj9in84k5.amplifyapp.com'}

functions:
  predict:
    handler: handler.predict
    timeout: 20
    events:
      - http:
          path: predict
          method: post
          cors:
            origins: ${self:custom.allowedOrigins}
            headers:
              - Content-Type
            allowCredentials: false
          # Validation côté API Gateway: exige {"features":[30 nombres]}
          request:
            schemas:
              application/json:
                name: PredictRequest
                schema:
                  type: object
                  required:
                    - features
                  properties:
                    features:
                      type: array
                      minItems: 30
                      maxItems: 30
                      items:
                        type: number

  health:
    handler: handler.health
    events:
      - http:
          path: health
          method: get
          cors: true

# Sorties CloudFormation: pratiques pour les pipelines (URLs)
resources:
  Outputs:
    ServiceEndpoint:
      Description: REST API base URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - ${sls:stage}
    HealthUrl:
      Description: Healthcheck URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - ${sls:stage}
            - "/health"
    PredictUrl:
      Description: Predict URL
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api."
            - Ref: AWS::Region
            - ".amazonaws.com/"
            - ${sls:stage}
            - "/predict"
