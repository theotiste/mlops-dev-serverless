jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    # ⬇️ injecte la clé pour toutes les étapes du job
    env:
      SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve env and derived vars
        shell: bash
        run: |
          STAGE="${{ inputs.stage || env.STAGE }}"
          REGION="${{ inputs.region || env.AWS_REGION }}"
          echo "STAGE=$STAGE"        >> "$GITHUB_ENV"
          echo "AWS_REGION=$REGION"  >> "$GITHUB_ENV"
          echo "STACK=cancer-prediction-api-$STAGE" >> "$GITHUB_ENV"
          # Sanity: la clé Serverless doit être présente
          [ -n "$SERVERLESS_ACCESS_KEY" ] || { echo "::error::SERVERLESS_ACCESS_KEY absent"; exit 1; }

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::571600829584:role/GitHubOIDC-ServerlessDeployer
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm i -g serverless@4

      - name: Print resolved Serverless config
        run: sls print --stage "$STAGE" --region "$AWS_REGION"

      - name: Deploy
        env:
          SLS_TELEMETRY_DISABLE: "1"
        run: sls deploy --stage "$STAGE" --region "$AWS_REGION" --conceal

      - name: Show endpoints
        run: sls info --stage "$STAGE" --region "$AWS_REGION"
