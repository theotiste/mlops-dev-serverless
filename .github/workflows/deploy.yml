name: Deploy backend (Serverless + OIDC)

on:
  push:
    branches: [ main ]
    paths:
      - 'serverless.yaml'
      - 'handler.py'
      - 'requirements.txt'
      - 'model-layer/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:
    inputs:
      stage:
        description: "Serverless stage"
        required: true
        default: "dev"
        type: string
      region:
        description: "AWS region"
        required: true
        default: "eu-west-3"
        type: string

# ⚠️ Pas d'expressions ici : que des littéraux éventuels
env:
  STAGE: dev
  AWS_REGION: eu-west-3

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Résout les valeurs finales et variables dérivées
      - name: Resolve env and derived vars
        shell: bash
        run: |
          STAGE="${{ inputs.stage || env.STAGE }}"
          REGION="${{ inputs.region || env.AWS_REGION }}"
          echo "STAGE=$STAGE" >> "$GITHUB_ENV"
          echo "AWS_REGION=$REGION" >> "$GITHUB_ENV"
          echo "STACK=cancer-prediction-api-$STAGE" >> "$GITHUB_ENV"
          echo "Resolved: STAGE=$STAGE REGION=$REGION STACK=cancer-prediction-api-$STAGE"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::571600829584:role/GitHubOIDC-ServerlessDeployer
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          npm i -g serverless@4

      - name: Print resolved Serverless config
        run: sls print --stage "$STAGE" --region "$AWS_REGION"

      - name: Deploy
        env:
          SLS_TELEMETRY_DISABLE: "1"
        run: sls deploy --stage "$STAGE" --region "$AWS_REGION" --conceal

      - name: Show endpoints
        run: sls info --stage "$STAGE" --region "$AWS_REGION"

      # (Optionnel) mini smoke test
      - name: Smoke test /health
        run: |
          URL=$(sls info --stage "$STAGE" --region "$AWS_REGION" | awk '/GET - /{print $3}')
          echo "Health URL: $URL"
          curl -sS "$URL" | jq .
